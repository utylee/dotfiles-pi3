##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#

		upstream sex {
			#server unix:/tmp/sex.sock  fail_timeout=0;
			#server http:/192.168.0.207:9999 fail_timeout=0;
			server 192.168.0.207:9999 fail_timeout=0;
		}
	upstream danawow {
		server unix:/tmp/wowinfo_1.sock fail_timeout=0;
		server unix:/tmp/wowinfo_2.sock fail_timeout=0;
		server unix:/tmp/wowinfo_3.sock fail_timeout=0;
		server unix:/tmp/wowinfo_4.sock fail_timeout=0;
		server unix:/tmp/wowinfo_5.sock fail_timeout=0;
		server unix:/tmp/wowinfo_6.sock fail_timeout=0;
		server unix:/tmp/wowinfo_7.sock fail_timeout=0;
		server unix:/tmp/wowinfo_8.sock fail_timeout=0;

		keepalive 100;
		#server 127.0.0.1:8081 fail_timeout=0;
		#server 127.0.0.1:8082 fail_timeout=0;
		#server 127.0.0.1:8083 fail_timeout=0;
		#server 127.0.0.1:8084 fail_timeout=0;
	}

# Expires map
map $sent_http_content_type $expires {
    default                    off;
    text/html                  epoch;
    text/css                   max;
    application/javascript     max;
    ~image/                    max;
}
server {
	#server_name utylee.dlinkddns.com;
	server_name utylee.duckdns.org;
	listen 9999;
	location / {
		proxy_pass http://sex;
		#alias /home/odroid/temp.html;
	}
}

server {
	#server_name utylee.dlinkddns.com;
	server_name utylee.duckdns.org;
	listen 80;

	location / {
		## First attempt to serve request as file, then
		## as directory, then fall back to displaying a 404.
		##try_files $uri $uri/ =404;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_set_header Host $http_host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		#proxy_set_header Host $host;
		#proxy_ssl_name $host;
		proxy_redirect off;
		proxy_buffering off;
		proxy_read_timeout 1800;
		proxy_pass http://192.168.0.207; 
		#proxy_pass https://192.168.0.207:443; 
	}

	location /webdav {
          autoindex on;
          alias /var/www/webdav;    # webdav가 실행될 디렉토리를 지정합니다. 혹은 root /var/dav; 로 설정해도 됩니다.
          auth_basic "Restricted Access";
          auth_basic_user_file /etc/nginx/.htpasswd; #사용자 id와 password를 설정할 파일
          client_body_temp_path /var/www/webdav/temp;
          dav_methods PUT MKCOL DELETE MOVE COPY;
          dav_ext_methods PROPFIND OPTIONS;
          dav_access user:rw group:rw all:r;
      }
}
 
server {
	#listen 80 default_server;
	#listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	#root /var/www/html;

	# Add index.php to the list if you are using PHP
	#index index.html index.htm index.nginx-debian.html;

	#server_name www.danawow.com;
	server_name 192.168.0.212;
	#listen 3333;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		#try_files $uri $uri/ =404;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_set_header Host $http_host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_redirect off;
		proxy_buffering off;
		proxy_read_timeout 1800;
		proxy_pass http://danawow;
		#http2_push /static/css/fontawesome.all.min.css;
		#http2_push /static/css/add.css;
		#http2_push_preload on;
	}
	location /static {
		# path for static files
		alias /home/odroid/.virtualenvs/blog/src/aiohttp/wowinfo/static;
		#root /home/pi/.virtualenvs/blog/src/aiohttp/wowinfo/;
	}
 
	expires $expires;

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php7.0-cgi alone:
	#	fastcgi_pass 127.0.0.1:9000;
	#	# With php7.0-fpm:
	#	fastcgi_pass unix:/run/php/php7.0-fpm.sock;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}

    listen 443 ssl http2; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/www.danawow.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/www.danawow.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

	#ssl_ecdh_curve secp384r1; # see here and here (pg. 485)
	#ssl_buffer_size 4k;
	#gzip on;
	#gzip_types application/javascript image/* text/css;
	#gunzip on;
	#ssl_session_cache shared:SSL:1m; # holds approx 4000 sessions
	#ssl_session_timeout 1h; # 1 hour during which sessions can be re-used.


}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}

 
server {
    if ($host = www.danawow.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


	server_name www.danawow.com;
    return 404; # managed by Certbot
}
